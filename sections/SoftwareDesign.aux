\relax 
\providecommand\hyper@newdestlabel[2]{}
\citation{vboot-design-doc}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Software Design}{14}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Security Promises}{14}{section.3.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces The left image shows the stages of Vboot Firmware. The right image shows the different boot paths, and data locations. Both make the distinction between Read-Only and Read-Write memory.\relax }}{15}{figure.caption.12}}
\newlabel{fig:vboot_stages_overview}{{3.1}{15}{The left image shows the stages of Vboot Firmware. The right image shows the different boot paths, and data locations. Both make the distinction between Read-Only and Read-Write memory.\relax }{figure.caption.12}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Verified Boot Flow}{15}{section.3.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces The logical flow for verifying the firmware image. Notice the different path for Developer mode, and the possibilities for failure.\relax }}{16}{figure.caption.13}}
\newlabel{fig:verif_flow}{{3.2}{16}{The logical flow for verifying the firmware image. Notice the different path for Developer mode, and the possibilities for failure.\relax }{figure.caption.13}{}}
\citation{developer-mode}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces The FSM for the boot modes.   1. The TPM's nonvolatile storage and keys are wiped. The user's data is erased.   2. The laptop is booted into Recovery, Vboot installs a Chrome USB.   3. The TPM's storage goes through reconfiguration. The entire disk is wiped.  \relax }}{17}{figure.caption.14}}
\newlabel{fig:mode_fsm}{{3.3}{17}{The FSM for the boot modes. \\ 1. The TPM's nonvolatile storage and keys are wiped. The user's data is erased. \\ 2. The laptop is booted into Recovery, Vboot installs a Chrome USB. \\ 3. The TPM's storage goes through reconfiguration. The entire disk is wiped. \\\relax }{figure.caption.14}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}Boot Modes}{17}{section.3.3}}
\newlabel{sec:boot-modes}{{3.3}{17}{Boot Modes}{section.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}Developer Mode}{17}{subsection.3.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}Recovery Mode}{18}{subsection.3.3.2}}
\citation{vboot-data-structures}
\citation{vboot-data-structures}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Layout of the Firmware Images\nobreakspace  {}\cite  {vboot-data-structures}\relax }}{19}{figure.caption.15}}
\newlabel{fig:vboot_images}{{3.4}{19}{Layout of the Firmware Images~\cite {vboot-data-structures}\relax }{figure.caption.15}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}Data Structures}{19}{section.3.4}}
\newlabel{sec:data-structures}{{3.4}{19}{Data Structures}{section.3.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.1}Firmware/Kernel Image}{19}{subsection.3.4.1}}
\citation{git}
\citation{repo}
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces The Keyblock data structure and Metadata for Keys and Signatures\relax }}{20}{figure.caption.16}}
\newlabel{fig:vboot_keyblock}{{3.5}{20}{The Keyblock data structure and Metadata for Keys and Signatures\relax }{figure.caption.16}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.2}Key Blocks}{20}{subsection.3.4.2}}
\newlabel{sec:key_block}{{3.4.2}{20}{Key Blocks}{subsection.3.4.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.3}Google Binary Block}{20}{subsection.3.4.3}}
\@writefile{toc}{\contentsline {section}{\numberline {3.5}Code Organization}{20}{section.3.5}}
\citation{coreboot}
\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces ChromeOS's boot flow goes through Coreboot, Depthcharge, and the Vboot Library twice for Firmware and Kernel verification\relax }}{21}{figure.caption.17}}
\newlabel{fig:code_repos}{{3.6}{21}{ChromeOS's boot flow goes through Coreboot, Depthcharge, and the Vboot Library twice for Firmware and Kernel verification\relax }{figure.caption.17}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.7}{\ignorespaces This report's boot flow uses QEMU's default bootloader Firmware, then a created C wrapper for the TPM and Debugging Output, and Vboot for the verification\relax }}{21}{figure.caption.18}}
\newlabel{fig:qemu_repos}{{3.7}{21}{This report's boot flow uses QEMU's default bootloader Firmware, then a created C wrapper for the TPM and Debugging Output, and Vboot for the verification\relax }{figure.caption.18}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.1}Coreboot}{21}{subsection.3.5.1}}
\newlabel{coreboot}{{3.5.1}{21}{Coreboot}{subsection.3.5.1}{}}
\citation{coreboot-payload}
\citation{vboot-codebase}
\citation{TPMLibs}
\citation{SWTPM}
\citation{TPMQEMU}
\citation{my-repo}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.2}Vboot\_reference}{22}{subsection.3.5.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.3}Software TPM}{22}{subsection.3.5.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.4}CBMC-Vboot}{23}{subsection.3.5.4}}
\@setckpt{sections/SoftwareDesign}{
\setcounter{page}{24}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{subyear}{2017}
\setcounter{part}{0}
\setcounter{chapter}{3}
\setcounter{section}{5}
\setcounter{subsection}{4}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{7}
\setcounter{table}{0}
\setcounter{ContinuedFloat}{0}
\setcounter{subfigure}{0}
\setcounter{subtable}{0}
\setcounter{parentequation}{0}
\setcounter{LT@tables}{0}
\setcounter{LT@chunks}{0}
\setcounter{Item}{0}
\setcounter{Hfootnote}{0}
\setcounter{bookmark@seq@number}{35}
\setcounter{section@level}{2}
}
